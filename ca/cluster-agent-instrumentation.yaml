apiVersion: appdynamics.com/v1alpha1
kind: Clusteragent
metadata:
  name: k8s-cluster-agent
  namespace: appdynamics
spec:
  controllerUrl: "http://192.168.0.214:8090"
  account: "customer1"
  appName: "docker-desktop-mac"
  serviceAccountName: appdynamics-cluster-agent
  image: "docker.io/appdynamics/cluster-agent:latest"
  logLevel: "DEBUG"
  logFileSizeMb: 5
  logFileBackups: 3
  stdoutLogging: "true"
  nsToMonitor: [default,dev,stage,prod]
  defaultAppName: "APM-GAME"
  instrumentationMethod: None
  appNameStrategy: manual
  nsToInstrumentRegex: default|stage|dev|prod
  resourcesToInstrument: [Deployment,StatefulSet]
  imageInfo:
    java:
      image: "docker.io/appdynamics/java-agent:20.9.0"
      agentMountPath: /opt/appdynamics
    nodejs:
      image: "appdynamics/nodejs-agent:20.12.0-14.0.0-stretch-slim"
      agentMountPath: /opt/appdynamics
    dotnetcore:
      image: "docker.io/appdynamics/dotnet-core-agent:latest"
      agentMountPath: /opt/appdynamics
  netvizInfo:
    bciEnabled: true
    port: 3892 
  instrumentationRules:
    - namespaceRegex: dev
      appName: AI-Dev-dockerdesktop
      language: java
      imageInfo:
        image: "docker.io/appdynamics/java-agent:20.9.0"
        agentMountPath: /opt/appdynamics
        imagePullPolicy: "IfNotPresent"
    - namespaceRegex: stage
      appName: AI-Stage-dockerdesktop
      language: java
      imageInfo:
        image: "docker.io/appdynamics/java-agent:20.6.0"
        agentMountPath: /opt/appdynamics/ca
    - namespaceRegex: default
      language: nodejs
      analyticsHost: trafostation.stoklasa.net:9080
      analyticsPort: 9080
      analyticsSslEnabled: false
